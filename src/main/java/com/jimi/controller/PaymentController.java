package com.jimi.controller;import com.alibaba.fastjson.JSON;import com.jimi.common.ApiResult;import com.jimi.entity.PaymentRespVo;import com.jimi.entity.PaymentVo;import com.jimi.entity.PaypalPaymentDto;import com.jimi.entity.PaypalPaymentInfo;import com.jimi.service.IPaypalService;import com.jimi.utils.DateUtils;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/payment")@Slf4jpublic class PaymentController {    @Autowired    private IPaypalService paypalService;    @RequestMapping(method = RequestMethod.POST, value = "pushPayment")    public ApiResult pushPayment() {        ApiResult apiResult = null;        try {            // 开始时间 本地时间今日零点 GMT            String startTime = DateUtils.getTodayFormat();            // 现在的时间 GMT            String endTime = DateUtils.getNowFormat();            List<PaypalPaymentDto> result = paypalService.pushPayment(startTime, endTime);            log.info("-PaymentController-pushPayment成功插入 result:{} 条数据", result);            if (result.size() > 0) {                apiResult = ApiResult.success(result);            } else {                apiResult = ApiResult.success("没有新的信息需要同步的", result);            }        } catch (Exception e) {            log.error("PaymentController-getPayment is error:{}", e);            return ApiResult.error(e.getMessage());        }        return apiResult;    }    // 查询数据记录--从表中查    @PostMapping("/queryAllPayment")    public ApiResult queryAllPayment(@RequestBody PaymentVo paymentVo) {        ApiResult apiResult = null;        try {            List<PaymentRespVo> result = paypalService.queryAllPayment(paymentVo);            log.info("-PaymentController-queryAllPayment查询数据为", JSON.toJSONString(result));            if (result.size() > 0) {                apiResult = ApiResult.success(result);            } else {                apiResult = ApiResult.success("没有新的信息需要同步的", result);            }        } catch (Exception e) {            log.error("PaymentController-getPayment is error:{}", e);            return ApiResult.error(e.getMessage());        }        return apiResult;    }    // 查询Paypal的数据--直查PayPal的api接口    @PostMapping("/queryFromPaypal")    public ApiResult queryFromPaypal(@RequestBody PaymentVo paymentVo) {        ApiResult apiResult = null;        log.info("-PaymentController-queryFromPaypal:{}", JSON.toJSONString(paymentVo));        try {            List<PaypalPaymentDto> result = paypalService.queryFromPaypal(paymentVo);            if (result.size() > 0) {                apiResult = ApiResult.success(result);            } else {                apiResult = ApiResult.success("没有新的信息需要同步的", result);            }        } catch (Exception e) {            log.error("PaymentController-getPayment is error:{}", e);            return ApiResult.error(e.getMessage());        }        return apiResult;    }    /*    @RequestMapping(method = RequestMethod.GET)    public String index(){        return "index";    }     */}